{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","Searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAyBeA,EAtBE,SAAC,GAAa,EAAZC,OAEjB,MAAM,IAAIC,MAAM,WCUHC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKC,UAAY,MAAjB,SACA,uBACGA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAYJ,OCEFK,EATA,SAACC,GAEf,OACC,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACEJ,EAAMK,YCgBKC,G,wDAnBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAEtB,WACC,OAAIG,KAAKJ,MAAMC,SACP,4DAGDG,KAAKX,MAAMK,a,GAhBKQ,cCmDbC,E,kDA3Cd,aAAc,IAAD,8BACZ,gBAcDC,eAAiB,SAACC,GAEjB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAfzC,EAAKZ,MAAQ,CACZjB,OAAQ,GACF2B,YAAa,IAEpBG,QAAQC,IAAI,eANA,E,qDASb,WAAqB,IAAD,OACnBC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKd,SAAS,CAAEtB,OAASoC,S,oBASzC,WAAW,IAAD,EACqBf,KAAKJ,MAA5BjB,EADE,EACFA,OAAQ2B,EADN,EACMA,YACTU,EAAiBrC,EAAOsC,QAAO,SAAAC,GACrC,OAAOA,EAAMC,KAAKC,cAAcC,SAASf,EAAYc,kBAEtD,OAAQzC,EAAO2C,OAGd,sBAAKtC,UAAW,KAAhB,UACI,oBAAIA,UAAY,KAAhB,2BACA,cAAC,EAAD,CAAWD,aAAgBiB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAUqC,WAP7B,+C,GA5BgBd,aCGHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.8d898815.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\tif (true) {\r\n\t\tthrow new Error('NOOOO!');\r\n\t}\r\n\tconst cardComponent = robots.map((user, i) => {\r\n\t  return (\r\n\t  \t<Card\r\n\t  \t  key = {i} \r\n\t  \t  id={robots[i].id}\r\n\t  \t  name={robots[i].name}\r\n\t  \t  email={robots[i].email}\r\n\t  \t  />\r\n      );\r\n\r\n\t})\r\n\treturn(\r\n\t\t<div>\r\n\t\t  {cardComponent}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({Searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className = 'pa2'>\r\n\t\t<input\r\n\t\t   className='pa3 ba b--green bg-lightest-blue'\r\n\t\t   type='search'\r\n\t\t   placeholder='search robots' \r\n\t\t   onChange = {searchChange}\r\n\t\t   />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n\treturn  (\r\n\t\t<div style = {{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({hasError:true})\r\n\t}\r\n    render() {\r\n    \tif (this.state.hasError) {\r\n    \t\treturn <h1> Oooops. That is not good </h1>\r\n\r\n    \t}\r\n    \treturn this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\n//STATE - an object that describes the app\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t        searchfield: ''\r\n\t\t}\r\n\t\tconsole.log('constructor');\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => this.setState({ robots : users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\t//console.log(event.target.value);\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t\t\r\n\t\t\r\n\t}\r\n  render () {\r\n  \tconst {robots, searchfield} = this.state;\r\n  \tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t})\r\n\t return !robots.length?\r\n\t <h1> Loading </h1> :\r\n\t (\r\n \t\t<div className ='tc'>\r\n \t   \t\t<h1 className = 'f2'> RoboFriends </h1>\r\n \t   \t\t<SearchBox searchChange = {this.onSearchChange}/>\r\n       \t\t<Scroll>\r\n       \t\t\t<ErrorBoundary>\r\n       \t\t\t\t<CardList robots = {filteredRobots} />\r\n       \t\t\t</ErrorBoundary>\r\n        \t</Scroll>\r\n        </div>\r\n\t);\r\n\r\n}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {robots} from './robots'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}